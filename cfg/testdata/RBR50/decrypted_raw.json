{
    "metadata": {
        "header_offset": 655360,
        "stated_magic": 538120740,
        "real_magic": 538120740,
        "rng": "uclibc"
    },
    "config_raw": "qos_list60=Unreal-Tourment 1 Unreal-Tourment 1 UDP 7777,27960 7783,27960 ---- ---- PWD_answer1=CA978112CA1BBDCAFAC231B39A23DC4DA786EFF8147C4E72B9807785AFEE48BB qos_list61=Warcraft 1 Warcraft 1 TCP 6112 6112 ---- ---- hijack_config_time1=12:18:54 Jan 08, 2021 wlg_ext_key1= block_no_connect_sta=hidden wl_wep_64_key1= PWD_answer2=3E23E8160039594A33894F6564E1B1348BBD7A0088D42C4ACB73EEAED59C009D qos_list62=0 arlo_lan_ipaddr=192.168.3.1 lbd_MUOverloadThreshold_W2=80 lbd_LowRSSIAPSteerThreshold_CAP_W2=35 wlg_ext_key2= email_schedule_hour=0 wl_wep_64_key2= wla_ap_bh_vids=3 miniupnp_devupc=606449084528 first_boot_qos=1 wla_rps=1 wlg_ext_key3= wan_pppoe_ac= wlg_ap_bh_vids=3 wlg_ap_bh_endis_wps=1 wl_wep_64_key3= ipv6_pppoe_reload=1 lbd_LowRSSIXingThreshold=10 reset_satelliteconfigs_forced=1 5GBackhaulEvalTimeShort=330 wla1_radiusPort=1812 wlg1_radiusPort=1812 wla_denylist= lbd_APSteerToRootMinRSSIIncThreshold=10 wlg_ext_key4= genie_soap_port=80 leafp2p_log_entry_limit=10000 bridge_wl_ssid=NETGEAR-Bridge limit=0 wl_wep_64_key4= wl_denylist= dgc_sysinfo_device_name=Orbi-Desktop hijack_config_time5=12:21:01 Jan 08, 2021 show_bridge=0 lbd_LowRSSIAPSteerThreshold_CAP_W5=20 wla_operation_mode=1 wla1_sectype=1 wlg1_sectype=1 wla_sectype=4 repacd_Daisy_Chain_Enable=1 lbd_MUOverloadThreshold_W5=99 rae_cur_mode=router leafp2p_log_type=1 streamboost_enable=0 modem_mode=0 bridge_mode=0 ant_a_mode=1 ant_g_mode=1 Readyshare_name=readyshare ctrl_volumn_time=0 wan_mulpppoe1_service= wlg_operation_mode=9 wladv_schedule_enable=0 wl_sectype=4 hijack_config_time6=12:21:15 Jan 08, 2021 hijack_config_time7=12:22:33 Jan 08, 2021 wl_frag=2346 lbd_AuthRejMax=2 hijack_config_time8=12:22:48 Jan 08, 2021 wl_key_length=64 hijack_config_time9=12:22:50 Jan 08, 2021 lbd_MaxBTMUnfriendly=120 bridge_dhcp_gateway=0.0.0.0 wan_mulpppoe2_policy=0 weak_password_check=0 wla1_wpas_psk= wla1_wpa2_psk= wla1_wpa1_psk= wlg1_wpas_psk= wlg1_wpa2_psk= wlg1_wpa1_psk= bridge_dhcp_netmask=0.0.0.0 dns_hijack=0 wla_hidden_channel=48 genie_remote_url=https://genieremote.netgear.com/genie-remote/claimDevice wl_hidden_channel=0 satellite_online_num=0 qos_endis_wmm=0 green_download_max_tasks_run=6 bridge_ether_dns_assign=1 endis_wlg_wireless_isolation=0 failover_wired_proto=dhcp wl2g_BACKHAUL_AP=ath01 qos_list50=0 qos_list51=Age-of-Empires 1 Age-of-Empires 1 TCP 23978 23978 ---- ---- qos_list1=IP_Phone 0 IP_Phone 0 TCP 6670 6670 ---- ---- upnp_enableMedia=1 repacd_RateScalingFactor=85 qos_list52=Age-of-Empires 1 Age-of-Empires 1 UDP 23978 23978 ---- ---- qos_list2=IP_Phone 0 IP_Phone 0 UDP 6670 6670 ---- ---- extender_ipaddr=0.0.0.0 wl_bh_sync=2e5e36cc76796cee50adb5ac3d2d3a8b8348903264aa3d6ee3c17f0e6acf3f43 gwDisconnDuration_sec=3900 qos_list53=Everquest 1 Everquest 1 TCP 7000 7000 ---- ---- qos_list3=Skype 0 Skype 0 TCP 80,443 80,443 ---- ---- wlg_arlo_endis_allow_see_and_access=0 wla_2nd_ap_bh_brs=brarlo ehc_wps=0 wan_ether_this_mac= endis_wlg_ap_bh_wps=1 have_click_take_me_to_internet=0 blk_svc_sched=0 lbd_MUAvgPeriod=60 qos_list54=0 qos_list4=0 wlg_arlo_endis_arloNet=0 wla_ssid=ORBI10 lbd_LoadBalancingAllowedMaxPeriod=10 update_agreement=1 ookla_downlimit= ookla_uplimit= email_port=25 ntpadjust=0 lbd_BlacklistTime=60 qos_list55=Quake-2 1 Quake-2 1 TCP 27960 27960 ---- ---- qos_list5=Netgear_EVA 0 Netgear_EVA 0 UDP 49152 49155 ---- ---- dgc_flash_oops_name=mtdoops dgc_flash_trafficmeter_name=traffic_meter miniupnp_friendlyname=NETGEAR RBR50 Orbi Router wla_auth_mode=none rcagent_log_to_console=0 readycloud_enable=0 genie_remote_certificate=/opt/xagent/certs/ca-bundle-mega.crt vpn_access_mode=auto green_download_overwrite=0 green_disk_lable=U: iptv_mask_change=0 ipv6_type=disabled ath_header_enable=0 wan_dhcp_mtu=1500 wan_lease=86400 wl_ifname=ath0 lan_lease=86400 raw_iface=eth1 qos_list56=Quake-2 1 Quake-2 1 UDP 27960 27960 ---- ---- qos_list6=0 dgc_wlan_2g_phyif=wifi0 dgc_netif_lan_phyif=eth1 dgc_netif_wan_phyif=eth0 memory_flag=1 qos_list57=Quake-3 1 Quake-3 1 TCP 27960 27960 ---- ---- qos_list7=Vonage_IP_Phone 0 Vonage_IP_Phone 0 UDP 53,69,5060 53,69,5061 ---- ---- multi_ap_disablesteering=0 dstflag=0 forward_same_port_flag=1 qos_list58=Quake-3 1 Quake-3 1 UDP 27960 27960 ---- ---- qos_list8=0 qos_list59=Unreal-Tourment 1 Unreal-Tourment 1 TCP 7777,27960 7783,27960 ---- ---- qos_list9=Google_Talk 0 Google_Talk 0 TCP 443 443 ---- ---- wla1_wpa_gtk_rekey=0 wlg1_wpa_gtk_rekey=0 wla_wpa_gtk_rekey=0 readycloud_use_lantry=1 wl_wpa_gtk_rekey=0 armor_login_mark=1 wps_pin_attack_check=1 x_discovery_url=https://presence.ngxcld.com/presence/presence x_claimed_url=https://registration.ngxcld.com/registration/status endis_wla1_wmm=1 wl_akm= lbd_BcnrptActiveDuration=50 wifi_debug_option=0x00112233 dgc_func_have_ndn=0 enable_arlo_function=0 extender_ether_ip_assign=1 endis_wla_guest_wireless_isolation=0 ipv6_fixed_wan_prefix_len= wan_ether_mac_assign=0 wan_ether_dns_assign=0 wla1_endis_guestSSIDbro=1 wlg1_endis_guestSSIDbro=1 wl_radio=1 installby_guiapp=0 wl5g_BACKHAUL_AP=ath2 overwrite_14010=0 wla1_wep=disabled wlg1_wep=disabled wla_radiusSerIp= ipv6_fixed_gw_ip= usb_enableHTTP=0 block_endis_Trusted_IP=0 sysDNSHost_tmp= wla_key1= bridge_ether_dns1= ntpserver1=time-g.netgear.com hijack_refresh_counter=0 ntpPortNumber=123 dgc_func_have_usb=1 wla_key2= lbd_LowRSSIAPSteerThreshold_RE_W2=35 bridge_dhcp_ipaddr=0.0.0.0 bridge_ether_dns2= StringTable_download_Ver=V1.0.0.1 ntpserver2=time-h.netgear.com overwrite_20013=0 wla_key3= leafp2p_services=1 basic_station_mac= wan_dns= lbd_APSteerToPeerMinRSSIIncThreshold=10 wla_2nd_sta_ssid=NETGEAR_ORBI_hidden99 wla_2nd_ul_bssid= dgc_func_have_business_ap_detect=0 wlg_arlo_radiusPort=1812 wla_key4= vpn_serv_port=12974 ipv6_dhcps_interface_id=0:0:0:0 ftp_enable_internet=0 wds_endis_ip_client=0 email_ntpadjust=0 email_password= wan_pppoe_passwd= wl_radiusSecret= upgrade_orbi_image=3635943935 wlg_sta_sectype=4 installState=14 lbd_LowRSSIAPSteerThreshold_RE_W5=20 wla1_wpae_mode=WPAE-TKIPAES wlg1_wpae_mode=WPAE-TKIPAES lbd_SteeringProhibitTime=120 lbd_BTMSteeringProhibitShortTime=15 wlg_ext_sectype=1 leafp2p_log_file_name=/tmp/leafd.log last_speedtest_time= cwmp_con_name= cwmp_acs_name= qos_mode=0 change_wan_type=1 enable_multipppoe_sche=0 update_ddns_time=0 lan_route= dgc_flash_language_dev=/dev/mtd25 dgc_flash_caldata_dev=/dev/mtd11 dgc_wlan_5g_phyif=wifi1 zixi_onoff=1 enable_lbd_diaglog=0 lbd_RSSISteeringPoint_UG=15 soap_setting=SetPassword wla1_key=1 wlg1_key=1 wl_wme_sta_vi=7 15 2 6016 3008 off wl_radius_key= wlg_arlo_wpas_psk= wlg_arlo_wpa2_psk=12345678 wlg_arlo_wpa1_psk= wlg_arlo_wpa_psk= timer_interval=3600 dgc_func_have_vlan=1 hijackPageSeen=1 manual_set_wan=1 internetDisconnDuration=40 endis_wla_wireless_isolation=0 rip_direction=0 wlg_arlo_endis_arloSSIDbro=1 upnp_enable_tivo=yes ipv6_sameinfo=0 wan_proto=dhcp wl_wme_sta_vo=3 7 2 3264 1504 off lan_proto=dhcp Reboot_timestamp=0 leafp2p_service_0=RouterRemote,0,1,1,0,1,6:135,6:136,6:137,6:138,6:139,6:445,6:548,17:135,17:136,17:137,17:138,17:139,17:445,17:548 wan_cdma_isp= wan_mulpppoe1_ip= sysDNSUser_tmp= email_smtp= wan_l2tp_server_ip= wlg_arlo_wep_64_key1= allow_no_connect_sta=hidden BackupDNS_IP1= wl_auto_antenna=1 xagent_server=prod wlg_arlo_wep_64_key2= BackupDNS_IP2= email_addr= endis_xr=1 wlg_arlo_wep_64_key3= wla_2nd_ap_bh_rts=2347 enable_circle_plc=0 hijack_process=3 set_auto_agreement=0 lbd_ProbeCountThreshold=1 flag_use_passwd_digest=1 wla_ul_bssid= wlg_ul_bssid= installMethod=1 wlg_arlo_wep_64_key4= wla_2nd_ap_bh_ssid=NETGEAR_ORBI_hidden99 wlg_ext_ssid= readycloud_use_xcloud=1 tun_vpn_serv_port=12973 log_wire_signal_sched=0 endis_ipv6_logo_test=0 filter_maclist= dhcp_start=192.168.1.2 upgrade_base_image=3635943935 lbd_InNetworkMaxAge=2592000 aws_stage=prod wl_hw_btn_state=on wla_2nd_sta_sectype=4 select_language=4301734173 ageing_time=30 ap_netbiosname=RBR50 enable_tail_cfu=1 lbd_BTMUnfriendlyTime=30 soap_config_state=0 usb_deviceName=readyshare upnp_scan_shareName=*** qos_uprate=512 schedule_start_block_time=00:00 email_username= filter_macmode=deny wan_bpa_idle_time=300 wl_wme=1 wl_country_code=12 wl_simple_mode=6 dgc_wlan_sate_ds_5g_bh_ap_if=ath2 dgc_wlan_sate_ds_2g_bh_ap_if=ath01 lbd_RSSISteeringPoint_DG=5 schedule_days_flag=0 dgc_wlan_5g_bh_prefix= dgc_wlan_5g_fh_prefix= previous_green_download_path=/mnt/sda1 schedule_all_day=1 client_key= dgc_func_have_dni_parental_ctl=1 rcagent_log_level=debug leafp2p_replication_hook_url=https://readyshare.netgear.com/device/hook leafp2p_replication_url=https://readyshare.netgear.com/device/entry console_loglevel=1 endis_wla_wmm=1 wan_orange_dhcp_mac_assign=0 wan_orange_dhcp_dns_assign=0 LB4_dev_sn=0 click_restart_counter_min=0 rip_version=0 wan_l2tp_wan_assign=0 overwrite_221100=0 wla1_radiusSerIp= qos_dft_list30=0 timestamp=007239011 wlg1_wep_64_key1= extender_ether_dns1= ipv6_pppoe_dns1= usb_enableFvia=1 usb_enableHvia=1 qos_dft_list31=SMTP 0 SMTP 2 TCP 25 25 ---- ---- StringTable_NonEnglish_Ver=V1.0.0.375 dgc_func_have_armor=1 i_wlg_2nd_br=br0 wlg1_wep_64_key2= extender_ether_dns2= device_mac_addr= usb_enableUSB=0 qos_dft_list32=0 email_ntpserver=GMT+8 wl_radius_ipaddr= lan_factory_mac=44:a5:6e:4d:42:a8 installfwstatus=1 wlg1_wep_64_key3= log_block_sites_services=1 qos_dft_list33=PPlive 0 PPlive 2 UDP 7100,7101,8000 7100,7101,8000 ---- ---- remote_access=2 wan_factory_mac=44:a5:6e:4d:42:a9 wlg1_wep_64_key4= lbd_OverloadInactTimeout=5 wl_disablecoext=0 log_internet_conn_reset=0 ftp_port=21 qos_dft_list34=0 wds_endis_mac_client=0 wan_mulpppoe2_east_password=guest wan_mulpppoe1_passwd= upnp_scanPeriod=60 remote_iplist= wlg_ap_bh_ssid=NETGEAR_ORBI_hidden99 lbd_SteeringUnfriendlyTime=600 lbd_InitialAuthRejCoalesceTime=2 dgc_func_have_security_storage=1 dgc_flash_type=NAND_FLASH wla_mode=9 time_zone=GMT+8 failover_enable_hardware=1 ipv6_dhcps_interface_id_enable=0 qos_dft_list35=WWW 0 WWW 2 TCP 80 80 ---- ---- upnp_AdverTime=1800 upnp_enable=1 wan_l2tp_mtu=1428 wla_tpscale=100 wl_tpscale=100 dgc_flash_firmware2_dev=/dev/mtd22 dgc_flash_firmware_dev=/dev/mtd18 qos_dft_list36=0 true_lanif=eth1 enable_soapclient_log=1 endis_watchdog=1 qos_dft_list37=DNS 0 DNS 2 UDP 53 53 ---- ---- wla_doth=1 wlg1_key_length=64 wla_auth=2 qos_dft_list38=0 wla_super_wifi=1 bridge_gateway=0.0.0.0 qos_dft_list39=ICMP 0 ICMP 2 TCP 0 0 ---- ---- click_restart_counter_day=0 bridge_netmask=0.0.0.0 lbd_StatsSampleInterval=1 newsoap_model=1 bas_conn_time_num=0 wan_orange_pppoe_wan_assign=0 Language_Selection=Auto ipv6_autoConfig_dns_assign=0 wan_pptp_mac_assign=0 wan_pptp_dns_assign=0 wan_cdma_evdo=1 funjsq_jump=298834627775164 wlg_arlo_wep=disabled qos_dft_list40=ICMP 0 ICMP 2 UDP 0 0 ---- ---- round_up=0 wan_pptp_local_ip= wan_brig_ssid1=0 qos_dft_list41=eMule 0 eMule 3 TCP 4242 4242 ---- ---- email_addr1= wan_ether_dns1= wan_brig_ssid2=0 ap_dhcp_ipaddr=0.0.0.0 GUI_Region2=English qos_dft_list42=0 email_this_addr= email_addr2= wan_ether_dns2= wan_dhcp_ipaddr=0.0.0.0 stats_server= os_server= wla_dyn_bw_rts=0 failover_detect_dns=www.netgear.com qos_dft_list43=Kazaa 0 Kazaa 3 TCP 1214 1214 ---- ---- endis_itunes=0 wps_status=5 wlg_sta_ssid=NETGEAR_ORBI_hidden99 wla_endis_ssid_broadcast=1 endis_telnet=0 qos_dft_list44=0 endis_ssid_broadcast=1 http_guestpwd= sysDNSPassword= porttrigger_timeout=20 email_send_alert=0 lbd_BTMResponseTime=10 allow_xagent_server_change=1 lbd_PhyRateScalingForAirtime=90 dgc_func_have_control_firmware=1 dgc_flash_language_name=language debug_save=11917027213 wlg_arlo_wpae_mode=WPAE-TKIPAES wla_2nd_operation_mode=4 wla1_enable_video_value=0 wla_enable_video_value=0 i_opmode=normal bandwidth_type=0 wan_cdma_pdp_type=IP qos_bandwidth_type=0 qos_dft_list45=Gnutella 0 Gnutella 3 TCP 80,6346,6347 80,6346,6347 ---- ---- wan_mulpppoe2_east_username=guest@flets wan_mulppp_mtu=1454 wan_l2tp_idle_time=300 internet_type=1 wlg_ap_bh_sectype=4 dgc_flash_oops_dev=/dev/mtd33 dgc_flash_trafficmeter_dev=/dev/mtd30 dgc_netif_ipv6_ppp_if=ppp2 qos_dft_list46=Gnutella 0 Gnutella 3 UDP 3646,6347 3646,6347 ---- ---- enable_multipppoe_serv=0 wl_txbuf=512 wl_rxbuf=128 leafp2p_debug=5 hidden_channel_flag=1 qos_dft_list47=bt_azureus 0 bt_azureus 3 TCP 6881 6881 ---- ---- wl_apply_flag= wlg_arlo_key_length=64 qos_dft_list48=0 key_length=0 wl_net_reauth=36000 lbd_AgingFrequency=60 wlg_arlo_key=1 qos_dft_list49=Counter-Strike 1 Counter-Strike 1 UDP 27015 27019 ---- ---- wan_endis_spi=1 hostname_check= debug_info=11917027213 failover_usb_proto=3g wlg_mu_mimo=0 wla_mu_mimo=0 soap_last_ip= ipv6_fixed_lan_ip= ipv6_fixed_wan_ip= qos_dft_list10=0 ipv6_autoConfig_dns1= qos_dft_list11=MSN_messenger 0 MSN_messenger 1 TCP 1863,1503,6891,6901 1863,1503,6900,6901 ---- ---- bd_server=PROD i_wla_br=br0 i_wlg_br=br0 bridge_ipaddr=0.0.0.0 ipv6_autoConfig_dns2= StringTable_default_Ver=V1.0.0.1 qos_dft_list12=MSN_messenger 0 MSN_messenger 1 UDP 1503,2001,6801,6901 1503,2120,6801,6901 ---- ---- hyd_LoadBalancingSeamless=0 wla1_endis_allow_see_and_access=0 wlg1_endis_allow_see_and_access=0 leafp2p_rescan_devices=1 qos_dft_list13=Yahoo_messenger 0 Yahoo_messenger 1 TCP 5050,5000,5100 5050,5010,5100 ---- ---- support_trend_micro_qos=0 lbd_APSteerToLeafMinRSSIIncThreshold=10 https_self_signed=1 miniupnp_pnpx_hwid=VEN_01f2&amp;DEV_002b&amp;REV_01 VEN_01f2&amp;DEV_8000&amp;SUBSYS_01&amp;REV_01 VEN_01f2&amp;DEV_8000&amp;REV_01 VEN_0033&amp;DEV_0008&amp;REV_01 downlimit= usb_HTTP_via_port=443 qos_dft_list14=Yahoo_messenger 0 Yahoo_messenger 1 UDP 5000,5100 5010,5100 ---- ---- sysDNSProviderlist= wan_endis_dod=1 is_default=1 wlan_apply_time=1674937690 aws_expect_time=8818 openvpn_cert_update=0 clear_cache=11917027213 backup_restore=007239011 wlg_arlo_ampdu=0 bridge_netbiosname=RBR50 wla_usermode=ap extender_mode=0 rcagent_log_to_file=1 vpn_enable=0 green_download_fileTP_username=anonymous green_download_max_uprate=10 guest_network_mode=0 qos_dft_list15=Netmeeting 0 Netmeeting 1 TCP 389,522,1503,1720,1731 389,522,1503,1720,1731 ---- ---- wan_mulpppoe2_west_username=flets@flets wl_wme_sta_be=15 1023 3 0 0 off wl_auth_mode=none wl_usermode=ap dgc_wlan_sate_5g_bh_sta_if=ath2 dgc_wlan_sate_2g_bh_sta_if=ath01 qos_dft_list16=0 force_clean_ranvram_flag=1 qos_dft_list17=AIM 0 AIM 1 TCP 5190 5190 ---- ---- wla_2nd_ap_bh_doth=1 wlg_ext_auth=1 rcagent_path=/opt/rcagent qos_dft_list18=AIM 0 AIM 1 UDP 5190 5190 ---- ---- lbd_OffloadingMinRSSI=20 manageby_gui=1 qos_dft_list19=SlingStream 0 SlingStream 1 UDP 554 554 ---- ---- failover_secondary_link=3g wl_wme_sta_bk=15 1023 7 0 0 off StringTable_download_region=English lbd_PHYBasedPrioritization=1 check_fw_ban=1 leafp2p_run=1 ipv6_pppoe_dns_assign=0 scienario=0 qos_dft_list20=0 wan_pppoe_ip= wan_dhcp_oldip=0.0.0.0 qos_dft_list21=SSH 0 SSH 1 TCP 22 22 ---- ---- lbd_MUCheckInterval_W2=10 miniupnp_modelnumber=RBR50 qos_dft_list22=0 old_enable_acl_status=0 wla_2nd_ap_bh_vids=3 endis_wla_wps=1 mobile_install_status=0 qos_dft_list23=Telnet 0 Telnet 1 TCP 23 23 ---- ---- endis_wildcards=0 lan_wins= lbd_AgeLimit=5 syslog_up_first=1 wlg_arlo_radiusSecret= wla1_radiusSecret= wlg1_radiusSecret= wlg1_endis_allow_guest=0 wla_radiusSecret= uplimit= green_download_upgrade_stat=0 green_download_fileTP_password= ant_g_select=1 qos_dft_list24=0 mon_time_limit=0 traffic_led=0 wan_mulpppoe2_west_password=flets email_cfAlert_Select=0 wan_pptp_connection_id= wl_radiusPort=1812 wl_radius_port=1812 board_region_default=0 upgrade_satellite_image=3635943935 lbd_MUCheckInterval_W5=10 lbd_OutOfNetworkMaxAge=300 wifi_debug_max_log_size=5 dgc_func_have_circle=1 download_orbi_confile=3635943935 wla_2nd_ap_bh_sectype=4 leafp2p_connection_method_type=2 enable_block_device=0 wan_cdma_idle_time=5 green_download_refresh_time=3 log_conn_web_interface=1 ipv6_dhcps_enable=0 qos_dft_list25=VPN 0 VPN 1 UDP 1701 1701 ---- ---- jp_multiPPPoE=0 http_guestname=guest schedule_end_block_time=23:59 fw_disable=0 wan_pppoe_keepalive=0 wan_hwname= wan_ifname=brwan lan_ifname=br0 dgc_wlan_sate_ds_5g_guestap_if=ath11 dgc_wlan_sate_ds_2g_guestap_if=ath03 enet_txbuf=128 enet_rxbuf=252 qos_dft_list26=0 collect_log=11917027213 region_flag=DISABLED enable_band_steering=1 qos_dft_list27=On_line_Game 0 On_line_Game 1 TCP 0 0 ---- ---- wla1_key_length=64 readycloud_control_path=/opt/rcagent/scripts qos_dft_list28=On_line_Game 0 On_line_Game 1 UDP 0 0 ---- ---- endis_108=0 dgc_func_have_orbi_mini=0 extender_gateway=0.0.0.0 qos_dft_list29=FTP 0 FTP 2 TCP 20,21 20,21 ---- ---- wan_endis_dmz=0 wla_wpas_psk= wla_wpa2_psk=unusualsocks948 wla_wpa1_psk= wl_wme_no_ack=off wl_wpas_psk= wl_wpa2_psk=unusualsocks948 wl_wpa1_psk= wla_2nd_hidden_channel=157 lan_ip_dynam=0 wps_pin_attack_num=3 wla_sec_wpaphrase_len=15 miniupnp_modeldescription=http://www.netgear.com/home/products/wirelessrouters upnp_enable_autoScan=0 wla_access_ctrl_on=0 wl_access_ctrl_on=0 wan_mulpppoe2_dns_assign=0 wan_mulpppoe1_dns_assign=0 config_timestamp=1610111035 wan_l2tp_local_ip= lan_dhcp=1 wan_bri_lan1=0 ipv6_dhcp_dns1= lbd_RSSIMeasureSamples_W2=2 i_wla_guest_br=br0 i_wlg_guest_br=br0 wan_bri_lan2=0 ipv6_dhcp_dns2= update_ddns_ipaddr=0 disable_port_trigger=0 wla_2nd_enhance_dfs=0 wan_bri_lan3=0 soap_last_access= wan_remote_mac=00:e0:4c:68:2c:63 wan_l2tp_this_mac= wan_wins= wan_status=0 wlg_ap_bh_wps_status=5 blk_site_sched=0 pinpuk_submit=106192367937359 arlo_dhcp_end=192.168.3.254 wla_cca_threshold=0 wl_cca_threshold=0 new_device_statue_by_default=Allow failover_detect_method=0 wan_bri_lan4=0 cwmp_con_port= cwmp_acs_password= admin_userGuest=guest guest guest guest guest 0 mon_volumn_limit=0 wan_pptp_password= wan_bpa_demand=1 wl_ssid=ORBI10 auto_timezone=4301734173 lbd_enable=0 lbd_RSSIMeasureSamples_W5=2 wla1_auth_mode=none wlg1_auth_mode=none hyd_enable=1 wan_cdma_pincode= usbDeviceName=/mnt/sda1 lltd_enable=0 guest_enable=0 ripd_enable=0 upnp_scanType=1 upnp_TimeToLive=4 wan_pppoe_username=guest dgc_flash_cert_dev=/dev/mtd26 dgc_wlan_sate_2g_ap_if=ath0 dgc_wlan_base_5g_ap_if=ath1 wlg_bf=0 wlg_implicit_bf=0 wla_bf=0 wla_implicit_bf=0 lbd_RateRSSIXingThreshold_DG=0 wl_vht_11ng=1 wla1_auth=2 wlg1_auth=2 dgc_func_have_lacpd_dni=0 lbd_MaxBTMActiveUnfriendly=120 dgc_func_have_vpncheck=1 wla_2nd_ap_bh_wpa2_psk=Su902ojBi9d9Up0XgEYl5NNqdre1jEt8JMg5uvIP2QTuCmIICDy9u2IwIDCixFo readycloud_upload_url=https://readycloud.netgear.com/directio wl_rrm=1 wl_dtim=1 wizard_detwan=238244753 wan_pppoe_intranet_wan_assign=0 ipv6_auto_dns_assign=0 wds_endis_fun=0 wan_pppoe_dns_assign=0 wan_pppoe_mac_assign=0 wlg_arlo_endis_allow_arlo=0 wl_crypto=tkip forward_port0= repeater_mac4_a= repeater_mac3_a= repeater_mac2_a= repeater_mac1_a= wladv_schedule_enable_a=0 lbd_TargetLowRSSIThreshold_W2=5 dgc_func_have_vlan_sb=0 wl_hwaddr= sso_status=81484244203395 wla_2nd_ap_bh_wps_status=5 wan_bpa_this_mac= wan_ifnames=brwan lan_ifnames=eth1 ath0 lbd_MaxSteeringTargetCount=1 dgc_func_have_forceshield=0 repacd_Daisy_Chain_Enable_Forced=1 wla1_endis_allow_guest=0 block_skeyword=0 n_dns_have_account=0 wl_allowlist= wl_closed=0 lbd_TargetLowRSSIThreshold_W5=15 lbd_BTMAssociationTime=6 dgc_flash_firmware2_name=firmware-2 arlo_lan_lease=86400 green_download_max_downrate=0 wl_bridge_sectype=1 warning_once=0 http_loginname=admin http_username=admin wan_pptp_username= wan_pppoe_service= wan_pppoe_mru=1492 dgc_wlan_sate_ds_5g_bh_sta_if=ath21 dgc_wlan_sate_ds_2g_bh_sta_if=ath02 dgc_wlan_5g_bh_phyif=wifi2 wla_2nd_implicit_bf=0 lbd_TSteering=15 lbd_RateRSSIXingThreshold_UG=20 lbd_11kProhibitTimeLong=60 orbi_auto_upg=1 wla_frag=2346 bas_auto_conn_flag=0 wlg_ext_key_length=5 leafp2p_log_entry_flush=1 leafp2p_path=/opt/leafp2p email_endis_auth=0 enable_password_recovery=1 lbd_MaxSteeringUnfriendly=86400 wlg_ext_key=1 wan_dhcp_gateway=0.0.0.0 dgc_func_have_byod_network=0 extender_netmask=0.0.0.0 lbd_InactCheckInterval=1 leafp2p_remote_url=http://peernetwork.netgear.com/peernetwork/services/LeafNetsWebServiceV2 green_download_max_tasks_all=20 lbd_BcnrptPassiveDuration=110 lastRebootReason=0 wan_orange_pppoe_mac_assign=0 wan_orange_pppoe_dns_assign=0 ipv6_6to4_dns_assign=0 qos_endis_on=0 wla_wds_endis_fun=0 wan_pptp_wan_assign=0 wl_bcn=100 endis_wla_radio=1 wlg1_radiusSerIp= vlan_tag_0=1 Intranet 11 0 0 0 failover_detect_ip=0.0.0.0 usb_enableFTP=1 qos_dft_list50=0 block_trustedip= autofw_port0= wla1_wep_64_key1= vlan_tag_1=1 Internet 10 0 0 0 ipv6_auto_dns1= qos_dft_list51=Age-of-Empires 1 Age-of-Empires 1 TCP 23978 23978 ---- ---- wl_wep_128_key1= upagent_server=prod ga_usr=e01068d03a73a53baeda833c08a9b29a wla1_wep_64_key2= i_wlg_arlo_br=br0 lbd_MUSafetyThreshold_W2=50 failover_fail_after=3 ipv6_auto_dns2= qos_dft_list52=Age-of-Empires 1 Age-of-Empires 1 UDP 23978 23978 ---- ---- click_restart_counter_hour=0 wl_wep_128_key2= ntp_server=GMT+8 apply_hijack_success=1 from_wifi_basic= lbd_NumRemoteChannels=3 wla1_wep_64_key3= log_wire_access=1 log_dos_attacks_port_scans=1 qos_dft_list53=Everquest 1 Everquest 1 TCP 7000 7000 ---- ---- remote_endis=0 wan_pppoe_this_mac= wlg_ap_bh_brs=brarlo wl_wep_128_key3= from_download=0 guiinstall_start=1 wla1_wep_64_key4= arlo_dhcp_start=192.168.3.2 qos_dft_list54=0 qos_threshold=0 show_traffic_timereset=10 wan_l2tp_demand=1 wan_pptp_demand=1 wan_bpa_password= wl_wep_128_key4= log_vpn_head=1 dgc_flash_devtable_name=device_table miniupnp_modelname=NETGEAR Orbi Desktop AC3000 Router access_guest_manage=0 netbiosname=RBR50 eventtype=0 lbd_MUSafetyThreshold_W5=90 wan_cdma_username= green_download_enable=0 cwmp_inform_enable=0 Enable_GUIStringTable=1 qos_dft_list55=Quake-2 1 Quake-2 1 TCP 27960 27960 ---- ---- wan_mulpppoe2_servicename= wan_mulpppoe2_other_username=guest wan_mulpppoe2_mtu=1454 wan_l2tp_username= WPS_type=0 dgc_flash_config_dev=/dev/mtd13 dgc_wlan_base_5g_bh_ap_if=ath2 dgc_wlan_base_2g_bh_ap_if=ath01 qos_dft_list56=Quake-2 1 Quake-2 1 UDP 27960 27960 ---- ---- 5GBackhaulEvalTimeLong=1800 forceshield_reset_flag=1 qos_dft_list57=Quake-3 1 Quake-3 1 TCP 27960 27960 ---- ---- time_crash=1610107867 wlg_arlo_auth=2 qos_dft_list58=Quake-3 1 Quake-3 1 UDP 27960 27960 ---- ---- qos_auto_bandwidth=0 edit_priority=MEDIUM qos_dft_list59=Unreal-Tourment 1 Unreal-Tourment 1 TCP 7777,27960 7783,27960 ---- ---- traffic_restart_day=1 email_cfAlert_Day=0 wlg_sta_wpa2_psk=Su902ojBi9d9Up0XgEYl5NNqdre1jEt8JMg5uvIP2QTuCmIICDy9u2IwIDCixFo wlg_ext_wpa2_psk= wlg_ext_wpa1_psk= dgc_func_have_guest_portal=0 readycloud_hook_url=https://readycloud.netgear.com/device/hook wl_txctrl=100 wan_cdma_dialnum=#777 endis_wl_wmm=1 wan_cdma_region=0 wan_orange_dhcp_wan_assign=0 ipv6_dhcp_dns_assign=0 GUI_Region=English thank_login=0 wan_l2tp_mac_assign=0 wan_l2tp_dns_assign=0 wla_wep=disabled upnp_enable_upnp=0 qos_dft_list60=Unreal-Tourment 1 Unreal-Tourment 1 UDP 7777,27960 7783,27960 ---- ---- wla_ht160=0 repeater_ip=0.0.0.0 sysDNSPassword_tmp= wan_pptp_server_ip=10.0.0.138 qos_dft_list61=Warcraft 1 Warcraft 1 TCP 6112 6112 ---- ---- wds_repeater_basic_a=0 repeater_mac1= wl_key1= lbd_RSSIDiff_EstW5FromW2=-15 qos_dft_list62=0 repeater_mac2= wan_enable_session2=0 sysDNSUser= port_forward_trigger=0 dmz_ipaddr=192.168.1. wl_key2= internetDisconnDuration_sec=0 1610107871 0 repacd_MaxMeasuringStateAttempts=30 hijack_config_status=5 wds=4462492026 wla_wps_status=5 cwmp_con_pass= repeater_mac3= wds_repeater_basic=0 restore_defaults=0 wan_pptp_this_mac= wl_rts=2347 wl_key3= lbd_EnableContinuousThroughput=0 lbd_Est_ProbeCountThreshold=3 lbd_AgingSizeThreshold=100 http_passwd_hashed=1D707811988069CA760826861D6D63A10E8C3B7F171C4441A6472EA58C11711B ntpserver_select=GMT+8 lbd_NormalInactTimeout=5 wan_cdma_password= repeater_mac4= wan_mulpppoe2_other_password= http_passwd= wan_l2tp_password= wan_pppoe_demand=1 wl_frameburst=off wl_key4= lbd_RSSIDiff_EstW2FromW5=5 RA_stage=prod dgc_func_have_autotimezone=1 dgc_flash_cert_name=cert dgc_flash_firmware_name=firmware dgc_flash_config_name=config dgc_sysinfo_module_name=RBR50 wla_wpae_mode=WPAE-TKIPAES cwmp_tr069_enable=0 restart_counter_time=00:00 count_mulpppoe=0 hidden_schedule_end_block_time=24:00 wan_bpa_username= wan_pppoe_mtu=1492 wan_pppoe_idletime=300 wl_wme_ap_be=15 63 3 0 0 off dgc_wlan_sate_5g_ap_if=ath1 dgc_wlan_base_2g_ap_if=ath0 dgc_netif_mppp_if=ppp1 schedule_apply_flag=0 wan_ipv6_cone_fitering=0 endis_wsc_config=0 rssi_prefer_2g_bh=-82 dgc_wlan_5g_guest_prefix= wla_key_length=64 readydrop_path=/opt/readydrop from_nowan_retry=0 wla_key=1 green_download_email_noti=0 ap_dhcp_gateway=0.0.0.0 schedule_days_to_block=everyday wl_wme_ap_bk=15 1023 7 0 0 off wan_dhcp_netmask=0.0.0.0 ipv6_orange_dns_assign=0 left_time_volumn=0 wan_domain= wl_sec_wpaphrase_len=15 endis_pin=0 lan_domain= reset_arlo=0 endis_wla_2nd_radio=1 wla_2nd_mu_mimo=0 qos_list20=0 remote_ip= wan_endis_igmp=0 wl_wep=disabled lan_stp=1 qos_list21=SSH 0 SSH 1 TCP 22 22 ---- ---- wlg_arlo_key1= wla_wep_64_key1= ipv6_6rd_dns1= qos_list22=0 wlg_arlo_key2= wla_wep_64_key2= LB_ver=4 ipv6_6rd_dns2= qos_list23=Telnet 0 Telnet 1 TCP 23 23 ---- ---- dgc_func_have_tt3=1 dgc_sysinfo_module_name_cc=RBS50 wlg_arlo_key3= wla_wep_64_key3= wla_rts=2347 green_enable_autorefresh_status=0 LB4_dev_pc=0 fw_check_tonight=1 lbd_MinRSSIBestEffort=12 lbd_BTMAlsoBlacklist=1 qos_list24=0 dgc_func_sate_have_tri_band=0 dgc_func_base_have_tri_band=0 wlg_arlo_key4= wla_radiusPort=1812 wla_wep_64_key4= wla_allowlist= wla_maclist= wla_closed=0 wla_2nd_guest_hyd_unmanaged=1 wan_cdma_dod=1 wan_orange_pppoe_demand=0 timereset=5 wan_mulpppoe_demand=1 wps_client= wl_maclist= qos_list25=VPN 0 VPN 1 UDP 1701 1701 ---- ---- dgc_func_have_wireless_combine=0 device_name=RBR50 wan_hostname=RBR50 wla_2nd_simple_mode=9 wla_macmode=disabled Device_name=RBR50 leafp2p_peer_route_type=1 tun_vpn_serv_type=udp wan_cdma_dial_mode=0 iptv_mask_pre=0 ap_mode=0 bridge_band_choose=2.4g ParentalControl_table=0, upnp_lastScanTime= lang_available=1 2 3 wan_mulpppoe2_username= wan_mulpppoe1_username= wan_pppoe_ifname= wan_pptp_mtu=1436 wl_wpae_mode=WPAE-TKIPAES wl_conf_mode=0 wl_macmode=disabled qos_list26=0 dgc_netif_ppp_if=ppp0 dgc_netif_wan_if=brwan dgc_netif_lan_if=br0 qos_list27=On_line_Game 0 On_line_Game 1 TCP 0 0 ---- ---- sent_log=11917027213 opendns_show_flag=0 jp_multiPPPoE_flag=0 qos_list28=On_line_Game 0 On_line_Game 1 UDP 0 0 ---- ---- remote_path=/opt/remote leafp2p_sys_prefix=/opt/remote green_download_path=/mnt/sda1 enable_dev_auto_refresh=1 qos_list29=FTP 0 FTP 2 TCP 20,21 20,21 ---- ---- wla_2nd_super_wifi=1 wl_country=10 wl_key=1 wla_country=10 failover_primary_link=dhcp miniupnp_modelurl=http://www.netgear.com/orbi wla_2nd_ap_bh_backhaul=1 wlg_ext_channel= x_register_url=https://registration.ngxcld.com/registration/register priority_zone_num=0 wan_cdma_access_num=0 ntpFailReason=1 wla_endis_pin=0 endis_wlg_arlo_wireless_isolation=1 ap_ether_dns_assign=1 bridge_ether_ip_assign=1 log_router_operation=1 wan_mulpppoe2_session=0 wan_ether_wan_assign=0 wl5g_GUEST_AP=ath11 wl2g_GUEST_AP=ath02 qos_list10=0 wlg_arlo_radiusSerIp= usb_workGroup=Workgroup enable_bt_igmp=0 qos_list11=MSN_messenger 0 MSN_messenger 1 TCP 1863,1503,6891,6901 1863,1503,6900,6901 ---- ---- ipv6_6to4_dns1= qos_dft_list1=IP_Phone 0 IP_Phone 0 TCP 6670 6670 ---- ---- qos_list12=MSN_messenger 0 MSN_messenger 1 UDP 1503,2001,6801,6901 1503,2120,6801,6901 ---- ---- ap_ipaddr=0.0.0.0 ipv6_6to4_dns2= scienario2=0 qos_dft_list2=IP_Phone 0 IP_Phone 0 UDP 6670 6670 ---- ---- old_lan_ipaddr=192.168.1.1 wla_plcphdr=0 wl_plcphdr=0 qos_list13=Yahoo_messenger 0 Yahoo_messenger 1 TCP 5050,5000,5100 5050,5010,5100 ---- ---- dgc_func_have_qos=0 qos_dft_list3=Skype 0 Skype 0 TCP 80,443 80,443 ---- ---- blank_status= hyd_PathTransitionMethod= qos_list14=Yahoo_messenger 0 Yahoo_messenger 1 UDP 5000,5100 5010,5100 ---- ---- passwd=709897735670748 wla1_ssid=NETGEAR-Guest wlg1_ssid=NETGEAR-Guest ntp_hidden_select=4 fbwifi_listening_port=5001 ant_a_select=2 usb_FTP_via_port=21 qos_dft_list4=0 wan_mulpppoe2_password= client_id= sysDNSHost= qos_list15=Netmeeting 0 Netmeeting 1 TCP 389,522,1503,1720,1731 389,522,1503,1720,1731 ---- ---- wlg_arlo_sectype=4 upnp_serverName=ReadyDLNA: RBR50 wsplcd_enable=1 repacd_enable=1 lbd_DownlinkRSSIThreshold_W5=-70 vpn_serv_type=udp upnp_scanTime=12 qos_dft_list5=Netgear_EVA 0 Netgear_EVA 0 UDP 49152 49155 ---- ---- update_ddns_format_time=0 wan_pptp_idle_time=300 internet_ppp_type=0 wl_rate=auto wl_mode=3 qos_list16=0 dgc_netif_br_if=br0 qos_dft_list6=0 cpu_flag=1 qos_list17=AIM 0 AIM 1 TCP 5190 5190 ---- ---- sw_print_log=0 update_tag=20 led_blinking_setting=0 log_port_firwarding_trigering=1 http_refresh_flag=0 ipv6_ripng=1 GUI_Region_New=English qos_dft_list7=Vonage_IP_Phone 0 Vonage_IP_Phone 0 UDP 53,69,5060 53,69,5061 ---- ---- wan_nat_fitering=0 wan_endis_rspToPing=0 qos_list18=AIM 0 AIM 1 UDP 5190 5190 ---- ---- hijack_to_eth=11906978159 qos_dft_list8=0 click_restart_counter_month=0 wl_auth=2 origin_blank_state_flag_orbi=0 qos_list19=SlingStream 0 SlingStream 1 UDP 554 554 ---- ---- wl_super_wifi=1 ap_gateway=0.0.0.0 ipv6_6to4_relay=0.0.0.0 qos_dft_list9=Google_Talk 0 Google_Talk 0 TCP 443 443 ---- ---- wan_gateway=0.0.0.0 lan_gateway=0.0.0.0 lbd_IncludeOutOfNetwork=1 app_ad_mark=1 ap_dhcp_netmask=0.0.0.0 cwmp_acs_url= ParentalControl=0 traffic_block_all=0 blockserv_ctrl=0 orbi_sel_num=0 dgc_func_have_vpn=1 ap_ether_ip_assign=1 admin_userAdmin=admin admin admin admin admin 1 wan_pppoe_wan_assign=0 wla_radio=1 endis_wl_radio=1 qos_list40=ICMP 0 ICMP 2 UDP 0 0 ---- ---- circle_jump=37961971404452 wl_radiusSerIp= access_control1=0 9C:EB:E8:15:1C:34 0 0 Unknown 0 0 qos_list41=eMule 0 eMule 3 TCP 4242 4242 ---- ---- wla1_key1= wlg1_key1= ap_ether_dns1= access_control2=0 00:E0:4C:68:2C:63 0 1 MACBOOK-PRO 0 0 qos_list42=0 wla1_key2= wlg1_key2= i_wla_2nd_br=br0 edit_mac_addr= ap_ether_dns2= click_restart_counter_year=0 wl_afterburner=off qos_list43=Kazaa 0 Kazaa 3 TCP 1214 1214 ---- ---- wla1_key3= wlg1_key3= wl_dyn_bw_rts=0 in_cdless=0 endis_ddns=0 email_port_spec=587 endis_wl_wps=1 hddnofind=0 qos_priority_set=1 lbd_MinTxRateIncreaseThreshold=20 qos_list44=0 wla1_key4= wlg1_key4= wla_guest_hyd_unmanaged=1 wlg_guest_hyd_unmanaged=1 enable_adv_attached=1 lbd_MUReportPeriod=15 ftp_enabled=0 block_KeyWord_DomainList= nddns_cfged=0 wps_alert=0 dhcp_end=192.168.1.254 armor_note=1 wireless_not_change=1 from_restore=0 ipv6_dhcps_interface_id_oldenable=0 overwrite_20070615=0 qos_list45=Gnutella 0 Gnutella 3 TCP 80,6346,6347 80,6346,6347 ---- ---- dgc_func_have_dual_image=1 dgc_flash_caldata_name=ARTMTD backup_save=007239011 detectEngine=Fing 2.0 dango_det_wan_type=AutoDetc atf_enable=0 router_disable=0 wan_bpa_servicename=login-server qos_list46=Gnutella 0 Gnutella 3 UDP 3646,6347 3646,6347 ---- ---- dgc_flash_devtable_dev=/dev/mmcblk0p27 dgc_wlan_sate_5g_guestap_if=ath11 dgc_wlan_sate_2g_guestap_if=ath02 dgc_wlan_base_5g_guestap_if=ath11 dgc_wlan_base_2g_guestap_if=ath02 qos_list47=bt_azureus 0 bt_azureus 3 TCP 6881 6881 ---- ---- lbd_TxRateXingThreshold_UG=20000 first_flag=0 reset_flag=0 qos_list48=0 hid_regionindex=5 i_wla_pri= i_wlg_pri= qos_list49=Counter-Strike 1 Counter-Strike 1 UDP 27015 27019 ---- ---- wlg_arlo_wpa_gtk_rekey=0 LB4_dev_oui=0 email_security=1 arlo_lan_netmask=255.255.255.0 iptv_mask=0 wla_channel=36 leafp2p_firewall=0 wl_channel=0 log_level=0 gwDisconnDuration=65 enable_vlan=0 ipv6_fixed_lan_prefix_len= ipv6_6rd_dns_assign=0 wan_mulpppoe2_wan_assign=0 wan_mulpppoe1_wan_assign=0 email_from_assign=0 wl5g_NORMAL_AP=ath1 wl2g_NORMAL_AP=ath0 qos_list30=0 show_ap=0 arlo_lan_dhcp=1 filter_client0= endis_ntp=1 PWD_question1=9 qos_list31=SMTP 0 SMTP 2 TCP 25 25 ---- ---- dgc_func_have_funjsq=0 wlg_arlo_wep_128_key1= wla1_wep_128_key1= wlg1_wep_128_key1= wla_wep_128_key1= ipv6_fixed_dns1= wl_fix_antenna=1 PWD_question2=6 overwrite_20062=0 qos_list32=0 dgc_func_have_readyshare_printer=1 wlg_arlo_wep_128_key2= wla1_wep_128_key2= wlg1_wep_128_key2= wla_wep_128_key2= ipv6_fixed_dns2= wan_ipaddr=0.0.0.0 wan_hwaddr= lan_ipaddr=192.168.1.1 lan_hwaddr= lbd_NumRemoteBSSes=4 cur_wanmac=44:a5:6e:4d:42:a9 qos_list33=PPlive 0 PPlive 2 UDP 7100,7101,8000 7100,7101,8000 ---- ---- wlg_arlo_wep_128_key3= endis_wla_2nd_ap_bh_wps=1 wla1_wep_128_key3= wlg1_wep_128_key3= wla_wep_128_key3= x_handler_1003=/opt/xagent/genie_handler log_allow_sites=1 endis_traffic=0 qos_list34=0 wlg_arlo_wep_128_key4= wlg_arlo_ssid=NETGEAR_ARLO wla1_endis_guestNet=0 wla1_wep_128_key4= wlg1_endis_guestNet=0 wlg1_wep_128_key4= wla_wep_128_key4= lbd_11kProhibitTimeShort=15 x_handler_1004=127.0.0.1:10101 wla_disablecoext=1 usb_enableNet=0 qos_rule_count=18 qos_list_default=0 http_lanport=80 http_wanport= have_set_passwd=1 remote_port=8443 qos_list35=WWW 0 WWW 2 TCP 80 80 ---- ---- dgc_func_have_speedtest_menu=0 dgc_flash_pot_name=pot hijack_language=0 wlg_arlo_auth_mode=none wla_simple_mode=9 wla_cwmmode=0 auto_update=1 multi_wan_type=ethonly default_ssphrase=0 ipv6_6to4_relay_type=0 web_tcbw_value=512 wan_mulpppoe1_idletime=300 auto_check_for_upgrade=1 enable_multipppoe=0 wl_cwmmode=0 quick_fastlane_dev=9c:eb:e8:15:1c:34 qos_list36=0 dgc_flash_pot_dev=/dev/mtd16 wla_2nd_bf=0 lbd_TxRateXingThreshold_DG=6000 flag_use_passwd_digest_new=1 qos_list37=DNS 0 DNS 2 UDP 53 53 ---- ---- wan_endis_sipalg=0 qos_list38=0 soap_auth=0 run_refresh=no qos_list39=ICMP 0 ICMP 2 TCP 0 0 ---- ---- email_notify=0 wl_wme_ap_vi=7 15 1 6016 3008 off wla_2nd_sta_wpa2_psk=Su902ojBi9d9Up0XgEYl5NNqdre1jEt8JMg5uvIP2QTuCmIICDy9u2IwIDCixFo dgc_func_have_guest_network=1 circle_login_mark=1 wla1_wpa_psk= wlg1_wpa_psk= wla_wpa_psk= ap_netmask=0.0.0.0 wan_netmask=0.0.0.0 wlg_ap_bh_wpa2_psk=Su902ojBi9d9Up0XgEYl5NNqdre1jEt8JMg5uvIP2QTuCmIICDy9u2IwIDCixFo wl_wpa_psk= lan_netmask=255.255.255.0 readycloud_fetch_url=https://readycloud.netgear.com/device/entry x_advisor_url=https://advisor.ngxcld.com/advisor/direct failver_retry_interval=10 forfirewall=0 wla_txctrl=100 wla_rrm=1 wan_cdma_apn= wan_bpa_mac_assign=0 wan_bpa_dns_assign=0 wps_lock_down=0 debug_orbi_info=11917027213 wl_wme_ap_vo=3 7 1 3264 1504 off    "
}
